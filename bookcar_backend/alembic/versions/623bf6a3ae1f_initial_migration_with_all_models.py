"""Initial migration with all models

Revision ID: 623bf6a3ae1f
Revises: 
Create Date: 2025-05-22 16:38:14.906776

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '623bf6a3ae1f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_branches_id'), 'branches', ['id'], unique=False)
    op.create_index(op.f('ix_branches_name'), 'branches', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('province_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('courses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ma_giao_dich', sa.String(), nullable=True),
    sa.Column('ma_dv_gui', sa.String(), nullable=True),
    sa.Column('ten_dv_gui', sa.String(), nullable=True),
    sa.Column('ngay_gui', sa.DateTime(), nullable=True),
    sa.Column('nguoi_gui', sa.String(), nullable=True),
    sa.Column('tong_so_ban_ghi', sa.Integer(), nullable=True),
    sa.Column('ma_bci', sa.String(), nullable=True),
    sa.Column('ma_so_gtvt', sa.String(), nullable=True),
    sa.Column('ten_so_gtvt', sa.String(), nullable=True),
    sa.Column('ma_csdt', sa.String(), nullable=True),
    sa.Column('ten_csdt', sa.String(), nullable=True),
    sa.Column('ma_khoa_hoc', sa.String(), nullable=True),
    sa.Column('ten_khoa_hoc', sa.String(), nullable=True),
    sa.Column('ma_hang_dao_tao', sa.String(), nullable=True),
    sa.Column('hang_gplx', sa.String(), nullable=True),
    sa.Column('so_bci', sa.String(), nullable=True),
    sa.Column('ngay_bci', sa.DateTime(), nullable=True),
    sa.Column('luu_luong', sa.Integer(), nullable=True),
    sa.Column('so_hoc_sinh', sa.Integer(), nullable=True),
    sa.Column('ngay_khai_giang', sa.DateTime(), nullable=True),
    sa.Column('ngay_be_giang', sa.DateTime(), nullable=True),
    sa.Column('so_qd_kg', sa.String(), nullable=True),
    sa.Column('ngay_qd_kg', sa.DateTime(), nullable=True),
    sa.Column('ngay_sat_hach', sa.DateTime(), nullable=True),
    sa.Column('thoi_gian_dt', sa.Integer(), nullable=True),
    sa.Column('so_qdkt', sa.String(), nullable=True),
    sa.Column('ddkt', sa.String(), nullable=True),
    sa.Column('so_qdtt', sa.String(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('card_status', sa.Integer(), nullable=True),
    sa.Column('stats', sa.JSON(), nullable=True),
    sa.Column('branch_id', sa.Integer(), nullable=True),
    sa.Column('synced', sa.Boolean(), nullable=True),
    sa.Column('sync_error', sa.Text(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plate', sa.String(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('manufacture_year', sa.String(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('hang', sa.String(), nullable=True),
    sa.Column('gptl', sa.String(), nullable=True),
    sa.Column('state', sa.JSON(), nullable=True),
    sa.Column('owner', sa.String(), nullable=True),
    sa.Column('synced', sa.Boolean(), nullable=True),
    sa.Column('sync_error', sa.Text(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('gptl_expired_date', sa.Date(), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicles_id'), 'vehicles', ['id'], unique=False)
    op.create_table('driving_lessons',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('lesson_name', sa.String(), nullable=False),
    sa.Column('lesson_date', sa.DateTime(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('start_time_window', sa.DateTime(), nullable=True),
    sa.Column('end_time_window', sa.DateTime(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trainees',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('so_tt', sa.Integer(), nullable=True),
    sa.Column('ma_dk', sa.String(), nullable=True),
    sa.Column('ho_ten_dem', sa.String(), nullable=True),
    sa.Column('ten', sa.String(), nullable=True),
    sa.Column('ho_va_ten', sa.String(), nullable=True),
    sa.Column('ngay_sinh', sa.Date(), nullable=True),
    sa.Column('ma_quoc_tich', sa.String(), nullable=True),
    sa.Column('ten_quoc_tich', sa.String(), nullable=True),
    sa.Column('noi_tt', sa.String(), nullable=True),
    sa.Column('noi_tt_ma_dvhc', sa.String(), nullable=True),
    sa.Column('noi_tt_ma_dvql', sa.String(), nullable=True),
    sa.Column('noi_ct', sa.String(), nullable=True),
    sa.Column('noi_ct_ma_dvhc', sa.String(), nullable=True),
    sa.Column('noi_ct_ma_dvql', sa.String(), nullable=True),
    sa.Column('so_cmt', sa.String(), nullable=True),
    sa.Column('ngay_cap_cmt', sa.Date(), nullable=True),
    sa.Column('noi_cap_cmt', sa.String(), nullable=True),
    sa.Column('gioi_tinh', sa.String(), nullable=True),
    sa.Column('ho_va_ten_in', sa.String(), nullable=True),
    sa.Column('so_ho_so', sa.String(), nullable=True),
    sa.Column('ma_dv_nhan_hoso', sa.String(), nullable=True),
    sa.Column('ten_dv_nhan_hoso', sa.String(), nullable=True),
    sa.Column('ngay_nhan_hoso', sa.Date(), nullable=True),
    sa.Column('nguoi_nhan_hoso', sa.String(), nullable=True),
    sa.Column('ma_loai_hoso', sa.String(), nullable=True),
    sa.Column('ten_loai_hoso', sa.String(), nullable=True),
    sa.Column('anh_chan_dung', sa.String(), nullable=True),
    sa.Column('chat_luong_anh', sa.Integer(), nullable=True),
    sa.Column('ngay_thu_nhan_anh', sa.Date(), nullable=True),
    sa.Column('nguoi_thu_nhan_anh', sa.String(), nullable=True),
    sa.Column('so_gplx_da_co', sa.String(), nullable=True),
    sa.Column('hang_gplx_da_co', sa.String(), nullable=True),
    sa.Column('dv_cap_gplx_daco', sa.String(), nullable=True),
    sa.Column('ten_dv_cap_gplx_daco', sa.String(), nullable=True),
    sa.Column('noi_cap_gplx_daco', sa.String(), nullable=True),
    sa.Column('ngay_cap_gplx_daco', sa.Date(), nullable=True),
    sa.Column('ngay_hh_gplx_daco', sa.Date(), nullable=True),
    sa.Column('ngay_tt_gplx_daco', sa.Date(), nullable=True),
    sa.Column('ma_noi_hoc_laixe', sa.String(), nullable=True),
    sa.Column('ten_noi_hoc_laixe', sa.String(), nullable=True),
    sa.Column('nam_hoc_laixe', sa.Integer(), nullable=True),
    sa.Column('so_nam_laixe', sa.Integer(), nullable=True),
    sa.Column('so_km_antoan', sa.Integer(), nullable=True),
    sa.Column('giay_cnsk', sa.String(), nullable=True),
    sa.Column('hinh_thuc_cap', sa.String(), nullable=True),
    sa.Column('hang_gplx', sa.String(), nullable=True),
    sa.Column('hang_daotao', sa.String(), nullable=True),
    sa.Column('rfid_card', sa.String(), nullable=True),
    sa.Column('indoor_hour', sa.Integer(), nullable=True),
    sa.Column('outdoor_hour', sa.Integer(), nullable=True),
    sa.Column('fingerprint_count', sa.Integer(), nullable=True),
    sa.Column('face_count', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('rfid_card_name', sa.String(), nullable=True),
    sa.Column('outdoor_distance', sa.Integer(), nullable=True),
    sa.Column('outdoor_session_count', sa.Integer(), nullable=True),
    sa.Column('faceid_failed_count', sa.Integer(), nullable=True),
    sa.Column('faceid_success_count', sa.Integer(), nullable=True),
    sa.Column('status1', sa.Integer(), nullable=True),
    sa.Column('status2', sa.Integer(), nullable=True),
    sa.Column('synced', sa.Boolean(), nullable=True),
    sa.Column('sync_error', sa.Text(), nullable=True),
    sa.Column('synced_outdoor_hours', sa.Float(), nullable=True),
    sa.Column('synced_outdoor_distance', sa.Float(), nullable=True),
    sa.Column('synced_verified_date', sa.DateTime(), nullable=True),
    sa.Column('synced_outdoor_status', sa.Integer(), nullable=True),
    sa.Column('anh_chan_dung_url', sa.String(), nullable=True),
    sa.Column('night_duration', sa.Integer(), nullable=True),
    sa.Column('auto_duration', sa.Integer(), nullable=True),
    sa.Column('inactive_face_count', sa.Integer(), nullable=True),
    sa.Column('lms_status', sa.Integer(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('driving_lesson_participants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('driving_lesson_id', sa.Integer(), nullable=False),
    sa.Column('vehicle_id', sa.String(), nullable=True),
    sa.Column('trainee_id', sa.Integer(), nullable=False),
    sa.Column('actual_start_time', sa.DateTime(), nullable=True),
    sa.Column('actual_end_time', sa.DateTime(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['driving_lesson_id'], ['driving_lessons.id'], ),
    sa.ForeignKeyConstraint(['trainee_id'], ['trainees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('driving_lesson_participants')
    op.drop_table('trainees')
    op.drop_table('driving_lessons')
    op.drop_index(op.f('ix_vehicles_id'), table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_table('courses')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_branches_name'), table_name='branches')
    op.drop_index(op.f('ix_branches_id'), table_name='branches')
    op.drop_table('branches')
    # ### end Alembic commands ###
